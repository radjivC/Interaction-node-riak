// Generated by CoffeeScript 1.6.3
(function() {
  var defaults;

  defaults = require('underscore').defaults;

  exports.plugins = {
    relation: function(model, options) {
      var maxItems, minItems, tag, type;
      options = defaults(options, {
        minItems: 0,
        maxItems: options.minItems
      });
      minItems = options.minItems;
      maxItems = options.maxItems;
      tag = options.tag;
      type = options.type;
      if (!type) {
        throw new Error('Missing type');
      }
      if (minItems > maxItems) {
        throw new Error('minItems cannot be greater than maxItems');
      }
      return model.pre('put', function(object, next) {
        var b, bucket, buckets, k, links, m;
        buckets = (function() {
          var _ref, _results;
          _ref = model.registry;
          _results = [];
          for (b in _ref) {
            m = _ref[b];
            if (m.name === type) {
              _results.push(b);
            }
          }
          return _results;
        })();
        if (!buckets.length) {
          return next(new Error("No model " + type));
        }
        bucket = buckets[0];
        links = (function() {
          var _i, _len, _ref, _results;
          _ref = object.links || [];
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            k = _ref[_i];
            if (k.bucket === bucket && k.tag === tag) {
              _results.push(k);
            }
          }
          return _results;
        })();
        if (minItems && links.length < minItems) {
          return next(new Error("Too few relations for " + type + ":" + tag));
        } else if (maxItems && links.length > maxItems) {
          return next(new Error("Too many relations for " + type + ":" + tag));
        } else {
          return next();
        }
      });
    }
  };

}).call(this);
